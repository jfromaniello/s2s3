#!/usr/bin/env node

var Q       = require('q');
var fs      = require('fs');
var path    = require('path');

var exec    = Q.nfbind(require('child_process').exec);
var AWS     = require('aws-sdk');
var moment = require('moment');

var config;
var config_file = process.argv[2] || path.join(process.env.HOME, '/.s2s3.config');

if (~['--version', '-V'].indexOf(process.argv[2])) {
  console.log('v' + require('../package').version);
  return process.exit(0);
}

if (~['--license', '-l'].indexOf(process.argv[2])) {
  console.log('Screenshot to S3  v' + require('../package').version);
  console.log(fs.readFileSync(__dirname + '/../LICENSE', 'utf8') + '\n\n');
  return process.exit(0);
}

if (~['--help', '-H'].indexOf(process.argv[2]) || !fs.existsSync(config_file)) {
  console.log('Screenshot to S3 v' + require('../package').version);
  console.log(fs.readFileSync(__dirname + '/../USAGE', 'utf8') + '\n\n');
  return process.exit(0);
}


try{
  config = JSON.parse(fs.readFileSync(config_file).toString());
} catch(er) {
  console.log('invalid configuration file');
  return process.exit(1);
}


AWS.config.update({
  accessKeyId: config.ACCESS_KEY_ID,
  secretAccessKey: config.ACCESS_KEY_SECRET,
  region: config.REGION,
  signatureVersion: 'v4'
});

var s3 = new AWS.S3({params: { Bucket:  config.BUCKET}});
var file = 'ss-' + moment().format('YYYY-MM-DDTHH-mm-ss') + '.png';
var fullpath = '/tmp/' + file;

exec('screencapture -i ' + fullpath)
  .then(function () {
    if (config.PREVIEW_BEFORE_UPLOAD) {
      return exec('open -W -F -a Preview ' + fullpath);
    } else {
      return file;
    }
  })
  .then(function () {
    var key = config.DIRECTORY ? path.join(config.DIRECTORY, file) : file;
    var result = config.COPY_FORMAT.replace(/\{filekey\}/ig, key);
    return exec('echo "' + result  + '" | pbcopy')
          .thenResolve([fullpath, key]);
  })
  .spread(function (file, key) {
    return Q.ninvoke(s3, 'putObject', {
      Key:         key,
      Body:        fs.readFileSync(file),
      ContentType: 'image/png'
    })
    .then(function(){
      fs.unlinkSync(file);
    })
    .thenResolve(key);
  })
  .then(null, function (err) {
    console.log(err);
    return process.exit(1);
  });
